<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.www.dao.mapper.PostMapper">

<!-- 1.Create -->
<!-- Create post -->
<insert id="insertPost" parameterType="Post">
INSERT INTO 
	postTb (
	userLoginId,
	title,
	contents
	) 
	VALUES(
		#{userLoginId}, 
		#{title}, 
		#{contents} 
	);
</insert>

<!-- 2.Read -->
<!-- Select post list -->
<select id="selectPostList" resultType="Post">
    SELECT
    	postId,
    	name,
    	title,
    	contents,
    	date_format(writeDate, "%Y-%m-%d") AS "writeDate",
    	viewCount 
    FROM 
    	postTb, 
    	userTb
    WHERE postTb.delDate IS NULL
    AND   postTb.userLoginId = userTb.LoginId
    ORDER BY writeDate DESC;
</select>

<!-- Select post one -->
<select id="selectPost" parameterType="int" resultType="Post">
	SELECT 
		postId,
		name,
		title,
		contents,
		date_format(writeDate, "%Y-%m-%d  %H:%i") AS "writeDate",
		viewCount
	FROM
		postTb,
		userTb
	WHERE
		postTb.postId = #{postId}
	AND postTb.delDate IS NULL
	AND postTb.userLoginId = userTb.LoginId;
</select>


<!-- 3.Update -->
<!-- Update post -->
<update id="updatePost" parameterType="Post">
UPDATE 
	postTb SET 
	title =  #{title},
	contents = #{contents} 
WHERE postId=#{postId};
</update>

<!--view Count update -->
<update id="updateViewCount" parameterType="int">
UPDATE 
	postTb SET 
	viewCount = viewCount+1
WHERE postId=#{postId};
</update>

<!-- 4.Delete -->
<!-- Delete post -->
<update id="deletePost" parameterType="int">
UPDATE postTb 
SET delDate = NOW() 
WHERE postId=#{postId};
</update>


</mapper>